
module cvmfs 1.1;

# Change Log
# 1.1
#   * introduce cvmfs_cache_t for cache directory
#
# 1.0
#   * initial version
#

type cvmfs_cache_t;
files_type(cvmfs_cache_t)

require {
	type mount_var_run_t;
	type fusermount_exec_t;
	type mount_t;
	type shadow_t;
	type var_t;
	type var_lib_t;
	type var_run_t;
	type file_t;
	type lib_t;
	type rpm_var_lib_t;
	class sock_file { create unlink };
	class fifo_file { create open unlink };
	class capability { fowner sys_ptrace };
	class process { sigstop signull sigkill };
	class file { open execmod execute_no_trans rename create unlink setattr getattr };
	class netlink_audit_socket create;
	class dir { add_name remove_name create write rmdir setattr };
}

#============= mount_t ==============
allow mount_t fusermount_exec_t:file execute_no_trans;
allow mount_t mount_var_run_t:sock_file { create unlink };
allow mount_t var_run_t:file { create unlink };
allow mount_t var_run_t:sock_file { create unlink };
allow mount_t self:capability fowner;
allow mount_t self:netlink_audit_socket create;
allow mount_t shadow_t:file open;
allow mount_t var_lib_t:file { rename create unlink setattr getattr };
allow mount_t var_lib_t:dir { create add_name remove_name rmdir };
allow mount_t var_lib_t:sock_file { create unlink };
allow mount_t var_lib_t:fifo_file { create open unlink };
allow mount_t cvmfs_cache_t:file { rename create unlink setattr getattr };
allow mount_t cvmfs_cache_t:dir { create write add_name remove_name rmdir setattr };
allow mount_t cvmfs_cache_t:sock_file { create unlink };
allow mount_t cvmfs_cache_t:fifo_file { create open unlink };
allow mount_t var_t:file { rename create unlink };
allow mount_t file_t:dir { add_name remove_name create };
allow mount_t file_t:file { rename create unlink };
allow mount_t file_t:sock_file { create unlink };
allow mount_t file_t:file setattr;
allow mount_t lib_t:file execmod;
allow mount_t self:capability sys_ptrace;
allow mount_t self:process { sigstop signull sigkill };
allow mount_t rpm_var_lib_t:dir write;
